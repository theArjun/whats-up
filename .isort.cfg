# .isort.cfg
# Python â€˜importâ€™ statement sorter (isort) configuration for this code base.
# Documentation: <URL:https://github.com/timothycrosley/isort/wiki/isort-Settings>.

[settings]

# Maximum length (columns) for a line of program code.
line_length = 79

# Number of blank lines to separate imports from following statements.
lines_after_imports = 2

# Filenames that â€˜isortâ€™ should not process.
skip =

# Names of sections that group import statements.
# The order in this sequence specifies the order the sections should appear.
sections =
    FUTURE
    STDLIB
    FRAMEWORK
    THIRDPARTY
    FIRSTPARTY
    LOCALFOLDER

# Name of section for any import statement of a package not known to â€˜isortâ€™.
default_section = THIRDPARTY

# Package names that are known for the â€˜FRAMEWORKâ€™ section.
known_framework =

# Package names that are known for the â€˜THIRDPARTYâ€™ section.
known_third_party =

# Package names that are known for the â€˜FIRSTPARTYâ€™ section.
known_first_party = dput

# Text for indentation of continuation lines.
indent = '    '

# The multi-line import statement style (integer code).
# See the â€˜isortâ€™ documentation for the meaning of each code.
multi_line_output = 3

# Sort imports by length (not alphanumeric)?
length_sort = false

# Add a trailing comma on the list of â€˜fromâ€™ import names?
include_trailing_comma = true

# For continuation lines, wrap lines in parenthesis?
use_parentheses = true

# Sort â€˜from â€¦ importâ€™ statements before â€˜importâ€™ statements?
# This is not the ideal behaviour; see the issue reported at
# <URL:https://github.com/timothycrosley/isort/issues/609>.
from_first = false

# Force multiple names imported with â€˜fromâ€™ to be separate statements?
force_single_line = false

# Force â€˜fromâ€™ imports to be grid wrapped regardless of line length?
force_grid_wrap = true

# Format import statements as a visually-balanced grid?
balanced_wrapping = false

# Combine an â€˜import â€¦ as â€¦â€™ onto the same line?
combine_as_imports = true


# Local variables:
# coding: utf-8
# mode: conf
# End:
# vim: fileencoding=utf-8 filetype=dosini :
